name: Publish Sphinx Docs to GitHub Pages

on: push
# could build on conditions

defaults:
  run:
    shell: bash -l {0}

jobs:

  docs:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Checkout
      uses: actions/checkout@master
      with:
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

    - name: Install Sphinx build requirements
      run: |
        pip install pydata-sphinx-theme "sphinx<6" setuptools-scm

    - name: Install our package
      run: |
        pip install --no-deps -e . -vv

    - name: Make Temporary Directory for Sphinx content
      run: |
        echo "SRC_DIR=$(pwd)" >> ${GITHUB_ENV}
        echo "TMP_DIR=$(mktemp -d)" >> ${GITHUB_ENV}
        # next step also creates _version.py file
        echo "VERSION=$(./setup.py --version)" >> ${GITHUB_ENV}

    - name: Show Environment variables
      run: |
        echo "SRC_DIR=${SRC_DIR}"
        echo "TMP_DIR=${TMP_DIR}"
        echo "VERSION=${VERSION}"

    - name: Sphinx
      run: |
        sphinx-build -M html ./docs/source "${TMP_DIR}/build"

    - name: Re-build the master directory (contains all documentation versions)
      run: |
        cp .github/index.html "${TMP_DIR}"

        cd "${TMP_DIR}"
        mv build/html "${VERSION}"
        /bin/rm -rf build
        ln -s "./${VERSION}" dev

        # add previous documentation (built versions)
        # update the switcher.json file before a new release
        wget https://github.com/prjemian/demo2301/archive/refs/heads/gh-pages.zip
        unzip -q gh-pages.zip
        /bin/rm gh-pages.zip

        source "${SRC_DIR}/.github/define_versions.sh"
        for v in ${versions}
          do
              if [ -d "demo2301-gh-pages/${v}" ]
                then
                    echo "directory 'demo2301-gh-pages/${v}' exists"
                    mv "demo2301-gh-pages/${v}" ./
                    latest="${v}"
                fi
          done
        echo "latest=${latest}"
        ln -s "./${latest}" ./latest

        /bin/rm -rf demo2301-gh-pages

    - name: Info
      run: |
        cd "${TMP_DIR}"
        echo "pwd=$(pwd)"
        ls -laFGh
        du -shc *

    # could deploy on conditions
    - name: Deploy (to gh-pages branch)
      uses: peaceiris/actions-gh-pages@v3
      with:
        publish_branch: gh-pages
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: "${{ env.TMP_DIR }}"
        force_orphan: true
